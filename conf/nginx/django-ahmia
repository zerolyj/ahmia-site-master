upstream django {
    # fail_timeout=0 means we always retry an upstream even if it failed to return a good HTTP response
    # UNIX domain socket
    server unix:/tmp/ahmia.sock fail_timeout=0;
}

upstream django-onion {
    # fail_timeout=0 means we always retry an upstream even if it failed to return a good HTTP response
    # UNIX domain socket
    server unix:/tmp/msydqstlz2kzerdg.sock fail_timeout=0;
}

server {
    listen 80;
    return 301 https://$host$request_uri;
}

server {
    server_name "~^www\.(.*)$";
    return 301 $scheme://$1$request_uri;
}

# Sets the path and other parameters of a cache. Cache data are stored in files.
# Max size is 5 GigaByte.
# Inactive specifies how long an item can remain in the cache without being accessed.
# In this setting, a file that has not been requested for 1440 minutes (24h)
# is automatically deleted from the cache by the cache manager process,
# regardless of whether or not it has expired.
proxy_cache_path /var/cache/nginx/ levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=1440m;

server {
    ssl on;
    listen      443 ssl;
    server_name ahmia.fi;

    #limit_conn conn_limit_per_ip 50;
    #limit_req zone=req_limit_per_ip burst=100 nodelay;

    charset     utf-8;
    client_max_body_size 75M;   # adjust to taste

    #Startcom
    #ssl on;
    #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    #ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    #ssl_certificate         /etc/nginx/cert_2016.crt;
    #ssl_certificate_key     /etc/nginx/cert_2016.key;

    #ssl_stapling_verify on
    #ssl_stapling on;
    ssl_trusted_certificate /etc/letsencrypt/live/ahmia.fi/chain.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_certificate_key /etc/letsencrypt/live/ahmia.fi/privkey.pem;
    ssl_certificate /etc/letsencrypt/live/ahmia.fi/fullchain.pem;

    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header Onion-Location http://juhanurmihxlp77nkq76byazcldy2hlmovfu2epvl5ankdibsot4csyd.onion$request_uri;

    access_log  /usr/local/lib/search/error/access.log;
    error_log  /usr/local/lib/search/error/error.log;

    # Django media
    location /media  {
        alias /usr/local/lib/python2.6/dist-packages/django/contrib/admin/static;
    }

    #location /static {
    #    alias /usr/local/lib/ahmia-site/ahmia/search/static;
    #}

    # Django WSGI Server
    location / {
        proxy_read_timeout 300;
        proxy_connect_timeout 300;

        proxy_pass http://django;    # defined at the beginning
        include proxy_params;        # should be /etc/nginx/proxy_param

        ################## CACHE SETTINGS ##################
	      proxy_cache my_cache;

        # Sets the number of requests after which the response will be cached.
        proxy_cache_min_uses 1;

        # Cache GET and HEAD methods
        proxy_cache_methods GET HEAD;

        # Sets caching time for different response codes.
        proxy_cache_valid 200 301 302 1440m; # 0s, 24h, 1440m = 24h
        proxy_cache_valid 404 500 60m; # 60m
        proxy_cache_valid any 30m; # 30m
    }
}

server {
    listen      127.0.0.1:56789;
    server_name .msydqstlz2kzerdg.onion;
    return 301 http://juhanurmihxlp77nkq76byazcldy2hlmovfu2epvl5ankdibsot4csyd.onion$request_uri;
}

server {
    listen      127.0.0.1:56790;
    server_name juhanurmihxlp77nkq76byazcldy2hlmovfu2epvl5ankdibsot4csyd.onion;

    charset     utf-8;
    client_max_body_size 75M;   # adjust to taste

    #log_format   main '0.0.0.0 - $remote_user [$time_local]  $status '
    #'"$request" $body_bytes_sent "$http_referer" '
    #'"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /usr/local/lib/search/error/hs_access.log;
    error_log  /usr/local/lib/search/error/hs_error.log;

    # Django media
    location /media  {
        alias /usr/local/lib/python2.6/dist-packages/django/contrib/admin/static;
    }

    #location /static {
    #    alias /usr/local/lib/ahmia-site/ahmia/search/static;
    #}

    location =/description.json {
        alias /usr/local/lib/ahmia-site/ahmia/search/static/description.json;
    }

    # Django WSGI Server
    location / {
        proxy_read_timeout 300;
        proxy_connect_timeout 300;

        proxy_pass http://django-onion;    # defined at the beginning
        include proxy_params;        # should be in /etc/nginx/proxy_params

        ################## CACHE SETTINGS ##################
	      proxy_cache my_cache;

        # Sets the number of requests after which the response will be cached.
        proxy_cache_min_uses 1;

        # Cache GET and HEAD methods
        proxy_cache_methods GET HEAD;

        # Sets caching time for different response codes.
        proxy_cache_valid 200 301 302 1440m; # 0s, 24h, 1440m = 24h
        proxy_cache_valid 404 500 60m; # 60m
        proxy_cache_valid any 30m; # 30m
    }
}
